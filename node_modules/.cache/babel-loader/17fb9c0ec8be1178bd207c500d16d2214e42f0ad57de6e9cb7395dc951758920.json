{"ast":null,"code":"var _jsxFileName = \"/Users/linxuanyu/Documents/GitHub/Introduction_to_the_Internet/Final Project/src/pages/CurrencyConverterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './CurrencyConverter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CurrencyConverter() {\n  _s();\n  const [amount, setAmount] = useState(\"\");\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"TWD\");\n  const [convertedAmount, setConvertedAmount] = useState(null);\n  const convertCurrency = async () => {\n    try {\n      const response = await axios.get(`https://api.exchangerate-api.com/v4/latest/${fromCurrency}`);\n      const rate = response.data.rates[toCurrency];\n      setConvertedAmount((amount * rate).toFixed(2));\n    } catch (error) {\n      console.error(\"貨幣轉換錯誤:\", error);\n    }\n  };\n  const currencyOptions = [{\n    code: \"USD\",\n    name: \"美元 (USD)\"\n  }, {\n    code: \"EUR\",\n    name: \"歐元 (EUR)\"\n  }, {\n    code: \"JPY\",\n    name: \"日圓 (JPY)\"\n  }, {\n    code: \"GBP\",\n    name: \"英鎊 (GBP)\"\n  }, {\n    code: \"AUD\",\n    name: \"澳幣 (AUD)\"\n  }, {\n    code: \"CAD\",\n    name: \"加幣 (CAD)\"\n  }, {\n    code: \"CHF\",\n    name: \"瑞士法郎 (CHF)\"\n  }, {\n    code: \"CNY\",\n    name: \"人民幣 (CNY)\"\n  }, {\n    code: \"HKD\",\n    name: \"港幣 (HKD)\"\n  }, {\n    code: \"TWD\",\n    name: \"新台幣 (TWD)\"\n  }, {\n    code: \"SGD\",\n    name: \"新加坡元 (SGD)\"\n  }, {\n    code: \"KRW\",\n    name: \"韓圓 (KRW)\"\n  }, {\n    code: \"INR\",\n    name: \"印度盧比 (INR)\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"currency-converter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u8CA8\\u5E63\\u8F49\\u63DB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      placeholder: \"\\u8F38\\u5165\\u91D1\\u984D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: fromCurrency,\n      onChange: e => setFromCurrency(e.target.value),\n      children: currencyOptions.map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: currency.code,\n        children: currency.name\n      }, currency.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: toCurrency,\n      onChange: e => setToCurrency(e.target.value),\n      children: currencyOptions.map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: currency.code,\n        children: currency.name\n      }, currency.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convertCurrency,\n      children: \"\\u8F49\\u63DB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), convertedAmount && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u8F49\\u63DB\\u5F8C\\u91D1\\u984D: \", convertedAmount, \" \", toCurrency]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(CurrencyConverter, \"SXTGvE8kQU59pCneo0ZNoLLO0PI=\");\n_c = CurrencyConverter;\nexport default CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CurrencyConverter","_s","amount","setAmount","fromCurrency","setFromCurrency","toCurrency","setToCurrency","convertedAmount","setConvertedAmount","convertCurrency","response","get","rate","data","rates","toFixed","error","console","currencyOptions","code","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","map","currency","onClick","_c","$RefreshReg$"],"sources":["/Users/linxuanyu/Documents/GitHub/Introduction_to_the_Internet/Final Project/src/pages/CurrencyConverterPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './CurrencyConverter.css';\n\nfunction CurrencyConverter() {\n  const [amount, setAmount] = useState(\"\");\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"TWD\");\n  const [convertedAmount, setConvertedAmount] = useState(null);\n\n  const convertCurrency = async () => {\n    try {\n      const response = await axios.get(\n        `https://api.exchangerate-api.com/v4/latest/${fromCurrency}`\n      );\n      const rate = response.data.rates[toCurrency];\n      setConvertedAmount((amount * rate).toFixed(2));\n    } catch (error) {\n      console.error(\"貨幣轉換錯誤:\", error);\n    }\n  };\n\n  const currencyOptions = [\n    { code: \"USD\", name: \"美元 (USD)\" },\n    { code: \"EUR\", name: \"歐元 (EUR)\" },\n    { code: \"JPY\", name: \"日圓 (JPY)\" },\n    { code: \"GBP\", name: \"英鎊 (GBP)\" },\n    { code: \"AUD\", name: \"澳幣 (AUD)\" },\n    { code: \"CAD\", name: \"加幣 (CAD)\" },\n    { code: \"CHF\", name: \"瑞士法郎 (CHF)\" },\n    { code: \"CNY\", name: \"人民幣 (CNY)\" },\n    { code: \"HKD\", name: \"港幣 (HKD)\" },\n    { code: \"TWD\", name: \"新台幣 (TWD)\" },\n    { code: \"SGD\", name: \"新加坡元 (SGD)\" },\n    { code: \"KRW\", name: \"韓圓 (KRW)\" },\n    { code: \"INR\", name: \"印度盧比 (INR)\" },\n  ];\n\n  return (\n    <div className=\"currency-converter\">\n      <h2>貨幣轉換</h2>\n      <input\n        type=\"number\"\n        value={amount}\n        onChange={(e) => setAmount(e.target.value)}\n        placeholder=\"輸入金額\"\n      />\n      <select value={fromCurrency} onChange={(e) => setFromCurrency(e.target.value)}>\n        {currencyOptions.map((currency) => (\n          <option key={currency.code} value={currency.code}>\n            {currency.name}\n          </option>\n        ))}\n      </select>\n      <select value={toCurrency} onChange={(e) => setToCurrency(e.target.value)}>\n        {currencyOptions.map((currency) => (\n          <option key={currency.code} value={currency.code}>\n            {currency.name}\n          </option>\n        ))}\n      </select>\n      <button onClick={convertCurrency}>轉換</button>\n\n      {convertedAmount && (\n        <p>轉換後金額: {convertedAmount} {toCurrency}</p>\n      )}\n    </div>\n  );\n}\n\nexport default CurrencyConverter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}