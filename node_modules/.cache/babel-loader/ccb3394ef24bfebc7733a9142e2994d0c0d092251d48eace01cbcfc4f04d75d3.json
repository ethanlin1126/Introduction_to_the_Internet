{"ast":null,"code":"var _jsxFileName = \"/Users/linxuanyu/Documents/GitHub/Introduction_to_the_Internet/src/pages/CalendarPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./CalendarPage.css\"; // Ensure custom styles are loaded\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarComponent = ({\n  events = [],\n  setEvents\n}) => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [eventName, setEventName] = useState(\"\");\n  const [eventTime, setEventTime] = useState(\"\");\n  const handleDateClick = date => {\n    setSelectedDate(date);\n    const existingEvent = events.find(event => event.date.toDateString() === date.toDateString());\n    if (existingEvent) {\n      setEventName(existingEvent.title);\n      setEventTime(existingEvent.time);\n    } else {\n      setEventName(\"\");\n      setEventTime(\"\");\n    }\n  };\n  const addEvent = () => {\n    if (selectedDate && eventName && eventTime) {\n      const newEvent = {\n        date: new Date(selectedDate),\n        time: eventTime,\n        title: eventName\n      };\n      const updatedEvents = [...events, newEvent].sort((a, b) => a.date - b.date);\n      setEvents(updatedEvents);\n      setEventName(\"\");\n      setEventTime(\"\");\n    } else {\n      alert(\"Please make sure to select a date and enter the event name and time!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"calendar-title\",\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onClickDay: handleDateClick,\n      value: selectedDate,\n      locale: \"en-US\",\n      tileClassName: ({\n        date\n      }) => date.toDateString() === (selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.toDateString()) ? \"selected-date\" : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-date-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"selected-date-display\",\n        children: [\"Selected Date: \", selectedDate.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventName,\n        onChange: e => setEventName(e.target.value),\n        placeholder: \"Enter event title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: eventTime,\n        onChange: e => setEventTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addEvent,\n        children: \"Add Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-list-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"event-list-title\",\n        children: \"Event List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), events.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"event-list\",\n        children: events.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"event-item\",\n          children: [event.date.toDateString(), \" \", event.time, \" - \", event.title]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-events\",\n        children: \"No events at the moment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarComponent, \"ZBkP8zAdX1ujrxWFI0PjD51ujJ4=\");\n_c = CalendarComponent;\nexport default CalendarComponent;\nvar _c;\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","CalendarComponent","events","setEvents","_s","selectedDate","setSelectedDate","eventName","setEventName","eventTime","setEventTime","handleDateClick","date","existingEvent","find","event","toDateString","title","time","addEvent","newEvent","Date","updatedEvents","sort","a","b","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClickDay","value","locale","tileClassName","type","onChange","e","target","placeholder","onClick","length","map","index","_c","$RefreshReg$"],"sources":["/Users/linxuanyu/Documents/GitHub/Introduction_to_the_Internet/src/pages/CalendarPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./CalendarPage.css\"; // Ensure custom styles are loaded\n\nconst CalendarComponent = ({ events = [], setEvents }) => {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [eventName, setEventName] = useState(\"\");\n  const [eventTime, setEventTime] = useState(\"\");\n\n  const handleDateClick = (date) => {\n    setSelectedDate(date);\n    const existingEvent = events.find(\n      (event) => event.date.toDateString() === date.toDateString()\n    );\n    if (existingEvent) {\n      setEventName(existingEvent.title);\n      setEventTime(existingEvent.time);\n    } else {\n      setEventName(\"\");\n      setEventTime(\"\");\n    }\n  };\n\n  const addEvent = () => {\n    if (selectedDate && eventName && eventTime) {\n      const newEvent = {\n        date: new Date(selectedDate),\n        time: eventTime,\n        title: eventName,\n      };\n\n      const updatedEvents = [...events, newEvent].sort((a, b) => a.date - b.date);\n      setEvents(updatedEvents);\n\n      setEventName(\"\");\n      setEventTime(\"\");\n    } else {\n      alert(\"Please make sure to select a date and enter the event name and time!\");\n    }\n  };\n\n  return (\n    <div className=\"calendar-container\">\n      <h2 className=\"calendar-title\">Calendar</h2>\n      <Calendar\n        onClickDay={handleDateClick}\n        value={selectedDate}\n        locale=\"en-US\"\n        tileClassName={({ date }) =>\n          date.toDateString() === selectedDate?.toDateString()\n            ? \"selected-date\"\n            : null\n        }\n      />\n\n      {selectedDate && (\n        <div className=\"selected-date-section\">\n          <h3 className=\"selected-date-display\">\n            Selected Date: {selectedDate.toDateString()}\n          </h3>\n          <input\n            type=\"text\"\n            value={eventName}\n            onChange={(e) => setEventName(e.target.value)}\n            placeholder=\"Enter event title\"\n          />\n          <input\n            type=\"time\"\n            value={eventTime}\n            onChange={(e) => setEventTime(e.target.value)}\n          />\n          <button onClick={addEvent}>Add Event</button>\n        </div>\n      )}\n\n      <div className=\"event-list-section\">\n        <h3 className=\"event-list-title\">Event List</h3>\n        {events.length > 0 ? (\n          <ul className=\"event-list\">\n            {events.map((event, index) => (\n              <li key={index} className=\"event-item\">\n                {event.date.toDateString()} {event.time} - {event.title}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p className=\"no-events\">No events at the moment.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CalendarComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AACzC,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,MAAM,GAAG,EAAE;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMc,eAAe,GAAIC,IAAI,IAAK;IAChCN,eAAe,CAACM,IAAI,CAAC;IACrB,MAAMC,aAAa,GAAGX,MAAM,CAACY,IAAI,CAC9BC,KAAK,IAAKA,KAAK,CAACH,IAAI,CAACI,YAAY,CAAC,CAAC,KAAKJ,IAAI,CAACI,YAAY,CAAC,CAC7D,CAAC;IACD,IAAIH,aAAa,EAAE;MACjBL,YAAY,CAACK,aAAa,CAACI,KAAK,CAAC;MACjCP,YAAY,CAACG,aAAa,CAACK,IAAI,CAAC;IAClC,CAAC,MAAM;MACLV,YAAY,CAAC,EAAE,CAAC;MAChBE,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;EAED,MAAMS,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAId,YAAY,IAAIE,SAAS,IAAIE,SAAS,EAAE;MAC1C,MAAMW,QAAQ,GAAG;QACfR,IAAI,EAAE,IAAIS,IAAI,CAAChB,YAAY,CAAC;QAC5Ba,IAAI,EAAET,SAAS;QACfQ,KAAK,EAAEV;MACT,CAAC;MAED,MAAMe,aAAa,GAAG,CAAC,GAAGpB,MAAM,EAAEkB,QAAQ,CAAC,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACZ,IAAI,GAAGa,CAAC,CAACb,IAAI,CAAC;MAC3ET,SAAS,CAACmB,aAAa,CAAC;MAExBd,YAAY,CAAC,EAAE,CAAC;MAChBE,YAAY,CAAC,EAAE,CAAC;IAClB,CAAC,MAAM;MACLgB,KAAK,CAAC,sEAAsE,CAAC;IAC/E;EACF,CAAC;EAED,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjC5B,OAAA;MAAI2B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5ChC,OAAA,CAACF,QAAQ;MACPmC,UAAU,EAAEtB,eAAgB;MAC5BuB,KAAK,EAAE7B,YAAa;MACpB8B,MAAM,EAAC,OAAO;MACdC,aAAa,EAAEA,CAAC;QAAExB;MAAK,CAAC,KACtBA,IAAI,CAACI,YAAY,CAAC,CAAC,MAAKX,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEW,YAAY,CAAC,CAAC,IAChD,eAAe,GACf;IACL;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EAED3B,YAAY,iBACXL,OAAA;MAAK2B,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpC5B,OAAA;QAAI2B,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GAAC,iBACrB,EAACvB,YAAY,CAACW,YAAY,CAAC,CAAC;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACLhC,OAAA;QACEqC,IAAI,EAAC,MAAM;QACXH,KAAK,EAAE3B,SAAU;QACjB+B,QAAQ,EAAGC,CAAC,IAAK/B,YAAY,CAAC+B,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE;QAC9CO,WAAW,EAAC;MAAmB;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFhC,OAAA;QACEqC,IAAI,EAAC,MAAM;QACXH,KAAK,EAAEzB,SAAU;QACjB6B,QAAQ,EAAGC,CAAC,IAAK7B,YAAY,CAAC6B,CAAC,CAACC,MAAM,CAACN,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFhC,OAAA;QAAQ0C,OAAO,EAAEvB,QAAS;QAAAS,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACN,eAEDhC,OAAA;MAAK2B,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjC5B,OAAA;QAAI2B,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC/C9B,MAAM,CAACyC,MAAM,GAAG,CAAC,gBAChB3C,OAAA;QAAI2B,SAAS,EAAC,YAAY;QAAAC,QAAA,EACvB1B,MAAM,CAAC0C,GAAG,CAAC,CAAC7B,KAAK,EAAE8B,KAAK,kBACvB7C,OAAA;UAAgB2B,SAAS,EAAC,YAAY;UAAAC,QAAA,GACnCb,KAAK,CAACH,IAAI,CAACI,YAAY,CAAC,CAAC,EAAC,GAAC,EAACD,KAAK,CAACG,IAAI,EAAC,KAAG,EAACH,KAAK,CAACE,KAAK;QAAA,GADhD4B,KAAK;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,gBAELhC,OAAA;QAAG2B,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACrD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAvFIH,iBAAiB;AAAA6C,EAAA,GAAjB7C,iBAAiB;AAyFvB,eAAeA,iBAAiB;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}